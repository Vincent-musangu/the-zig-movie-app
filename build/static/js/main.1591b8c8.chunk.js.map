{"version":3,"sources":["componets/Navigation.tsx","componets/MovieCard.tsx","pages/Home.tsx","componets/Search.tsx","pages/Details.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Navigation","ContextConsumer","context","Navbar","bg","fixed","variant","Nav","className","Brand","as","Link","to","size","color","Form","style","display","flexDirection","FormControl","type","placeholder","backgroundColor","onChange","event","setSearch","target","value","Cards","props","Container","title","onClick","movieDetail","id","Image","src","poster_path","alt","thumbnail","marginTop","release_date","slice","Home","Jumbotron","fluid","movies","map","key","popularity","vote_average","Search","float","width","padding","transition","fontSize","Details","Wraper","MovieCard","CardImage","details","Description","Title","Official","href","homepage","Year","Rate","Genres","genres","res","name","Overview","overview","styled","a","div","img","h1","p","h6","contextProvider","React","createContext","Consumer","App","useState","setMovies","setDetails","credit","setCredit","search","pages","setPages","searched","setSearched","window","onscroll","innerHeight","scrollY","document","body","offsetHeight","useEffect","axios","get","then","results","data","movieData","concat","console","log","AppContext","Provider","undefined","exact","path","component","from","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1591b8c8.chunk.js","sourcesContent":["import React, { ChangeEvent } from \"react\";\r\nimport \"../scss/navigation.scss\";\r\nimport { GiStarFormation } from \"react-icons/gi\";\r\n\r\nimport { Navbar, FormControl, Form, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ContextConsumer } from \"../App\";\r\n\r\nexport const Navigation: React.FC = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ContextConsumer>\r\n\t\t\t\t{context =>\r\n\t\t\t\t\tcontext && (\r\n\t\t\t\t\t\t<Navbar bg=\"danger\" fixed=\"top\" variant=\"dark\">\r\n\t\t\t\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t\t\t\t<Navbar.Brand as={Link} to=\"/home\">\r\n\t\t\t\t\t\t\t\t\t<GiStarFormation size={40} color=\"white\" />\r\n\t\t\t\t\t\t\t\t\tFive Stars Movies\r\n\t\t\t\t\t\t\t\t</Navbar.Brand>{\" \"}\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t\t<Form style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"mr-sm-2\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"transparent\",\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"white\"\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\t\t\t\t\t\t\tcontext.setSearch(event.target.value);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>{\" \"}\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</Navbar>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</ContextConsumer>\r\n\t\t</>\r\n\t);\r\n};\r\nexport const SideNavBar: React.FC = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div id=\"sidebar\">\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<Nav.Link className=\"sidenavlinks container\"> Recommended</Nav.Link>\r\n\t\t\t\t\t<Nav.Link className=\"sidenavlinks container\"> Trending</Nav.Link>\r\n\t\t\t\t\t<Nav.Link className=\"sidenavlinks container\">New Releases</Nav.Link>\r\n\t\t\t\t</nav>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport \"../scss/card.scss\";\r\nimport { Image, Container } from \"react-bootstrap\";\r\nimport { Movie, ContextConsumer } from \"../App\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Cards: React.FC<Movie> = props => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ContextConsumer>\r\n\t\t\t\t{context =>\r\n\t\t\t\t\tcontext && (\r\n\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tto={`/movies/${props.title}`}\r\n\t\t\t\t\t\t\t\tstyle={{ color: \"#555\" }}\r\n\t\t\t\t\t\t\t\tonClick={() => context.movieDetail(props.id)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\tclassName=\"card_image\"\r\n\t\t\t\t\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/w500/${props.poster_path}`}\r\n\t\t\t\t\t\t\t\t\talt={props.title}\r\n\t\t\t\t\t\t\t\t\tthumbnail\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<div className=\"card_title\">\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tto={`/movies/${props.title}`}\r\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"#fff9\" }}\r\n\t\t\t\t\t\t\t\t\tonClick={() => context.movieDetail(props.id)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{props.title}\r\n\t\t\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t\t\t<p style={{ color: \"#777\", marginTop: \"0px\" }}>\r\n\t\t\t\t\t\t\t\t\t{props.release_date?.slice(0, 4)}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</ContextConsumer>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { Container, Jumbotron } from \"react-bootstrap\";\r\nimport { Cards } from \"../componets/MovieCard\";\r\nimport { ContextConsumer } from \"../App\";\r\nimport { Movie } from \"../App\";\r\nimport { GiStarFormation } from \"react-icons/gi\";\r\n// import not_found from \"../images/not-found.jpg\";\r\nimport \"../App.scss\";\r\nexport const Home = () => {\r\n\treturn (\r\n\t\t<ContextConsumer>\r\n\t\t\t{context =>\r\n\t\t\t\tcontext && (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Jumbotron fluid className=\"jumbotron\">\r\n\t\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t<GiStarFormation size={40} color=\"red\" />\r\n\t\t\t\t\t\t\t\t<h2>Popular Movies</h2>\r\n\t\t\t\t\t\t\t\t<h5>A The Zig Challenge</h5>\r\n\t\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t</Jumbotron>\r\n\r\n\t\t\t\t\t\t{context.movies?.map((movies: Movie) => (\r\n\t\t\t\t\t\t\t<div className=\" movies\" key={movies.id}>\r\n\t\t\t\t\t\t\t\t<Cards\r\n\t\t\t\t\t\t\t\t\tid={movies.id}\r\n\t\t\t\t\t\t\t\t\t// details={() => context.movieDetail(movies.id)}\r\n\t\t\t\t\t\t\t\t\tpopularity={movies.popularity}\r\n\t\t\t\t\t\t\t\t\tposter_path={movies.poster_path}\r\n\t\t\t\t\t\t\t\t\tvote_average={movies.vote_average}\r\n\t\t\t\t\t\t\t\t\ttitle={movies.title}\r\n\t\t\t\t\t\t\t\t\trelease_date={movies.release_date}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</ContextConsumer>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { ContextConsumer, Movie } from \"../App\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport { Link } from \"react-router-dom\";\r\nexport const Search: React.FC<Movie> = props => {\r\n\treturn (\r\n\t\t<ContextConsumer>\r\n\t\t\t{context =>\r\n\t\t\t\tcontext && (\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto={`/movies/${props.title}`}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tcolor: \"#333\",\r\n\t\t\t\t\t\t\tbackgroundColor: \"white\",\r\n\t\t\t\t\t\t\tfloat: \"right\",\r\n\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\tpadding: \"5px  10px\",\r\n\t\t\t\t\t\t\t// margin: \"5px 0\",\r\n\t\t\t\t\t\t\ttransition: \" 0.5s ease\",\r\n\t\t\t\t\t\t\tfontSize: \"14px\"\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClick={() => context.movieDetail(props.id)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<FiSearch size={14} /> {props.title}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</ContextConsumer>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ContextConsumer, Movie } from \"../App\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport { MdStar } from \"react-icons/md\";\r\n\r\nexport const Details = (props: Movie) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ContextConsumer>\r\n\t\t\t\t{context =>\r\n\t\t\t\t\tcontext && (\r\n\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t<Wraper>\r\n\t\t\t\t\t\t\t\t<MovieCard>\r\n\t\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t\t<CardImage\r\n\t\t\t\t\t\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/w500/${context.details.poster_path}`}\r\n\t\t\t\t\t\t\t\t\t\talt={context.details.title}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</MovieCard>\r\n\t\t\t\t\t\t\t\t<Description>\r\n\t\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t\t<Title>\r\n\t\t\t\t\t\t\t\t\t\t<Official href={context.details.homepage} target=\"_blank\">\r\n\t\t\t\t\t\t\t\t\t\t\t{context.details.title}\r\n\t\t\t\t\t\t\t\t\t\t</Official>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Year>({context.details.release_date.slice(0, 4)})</Year>\r\n\t\t\t\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t\t\t\t<Rate>\r\n\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t{context.details.vote_average}\r\n\t\t\t\t\t\t\t\t\t\t\t<MdStar color=\"#fff9\" size={25} />\r\n\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t</Rate>{\" \"}\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<Genres>\r\n\t\t\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t{context.details.genres.map(\r\n\t\t\t\t\t\t\t\t\t\t\t(res: { id: number; name: string }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>{res.name} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Genres>\r\n\t\t\t\t\t\t\t\t\t<Overview>\r\n\t\t\t\t\t\t\t\t\t\t<h5>Overview</h5>\r\n\t\t\t\t\t\t\t\t\t\t{context.details.overview}\r\n\t\t\t\t\t\t\t\t\t</Overview>\r\n\t\t\t\t\t\t\t\t</Description>\r\n\t\t\t\t\t\t\t\t{/* <div>{context.credit}</div> */}\r\n\t\t\t\t\t\t\t</Wraper>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</ContextConsumer>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst Official = styled.a`\r\n\ttext-decoration: none;\r\n\tcolor: inherit;\r\n\t:hover {\r\n\t\ttext-style: none;\r\n\t\ttext-decoration: none;\r\n\t\tcolor: #fffd;\r\n\t}\r\n`;\r\nconst MovieCard = styled.div`\r\n\twidth: 250px;\r\n\theight: 380px;\r\n\tborder-radius: 3px;\r\n\tmargin-right: 80px;\r\n`;\r\nconst CardImage = styled.img`\r\n\twidth: inherit;\r\n\theight: inherit;\r\n\tobject-fit: cover;\r\n\r\n\tborder-radius: inherit;\r\n\tmargin: -1px 0 0 -1px;\r\n`;\r\n\r\nconst Description = styled.div`\r\n\twidth: 50%;\r\n\tdisplay: block;\r\n`;\r\nconst Wraper = styled.div`\r\n\tdisplay: flex;\r\n\tcolor: #fff9;\r\n`;\r\nconst Title = styled.h1`\r\n\tfont-weight: bold;\r\n`;\r\nconst Year = styled.p`\r\n\tfont-weight: bold;\r\n\tfont-size: 27px;\r\n\tdisplay: inline;\r\n`;\r\nconst Overview = styled.div`\r\n\ttext-overflow: wrap;\r\n\r\n\tfont-size: 15px;\r\n\tmargin-top: 10px;\r\n`;\r\nconst Rate = styled.div`\r\n\tdisplay:inline-flex\r\n\tfont-weight: bold;\r\n\tfont-size: 17px;\r\n\t\r\n`;\r\nconst Genres = styled.h6`\r\n\tdisplay: inline-block;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  // RouteComponentProps,\r\n  // useParams,\r\n  // useRouteMatch\r\n} from \"react-router-dom\";\r\n// import { useParams } from \"react-router\";\r\nimport \"./App.scss\";\r\nimport axios from \"axios\";\r\nimport { Navigation } from \"./componets/Navigation\";\r\n\r\nimport { Home } from \"./pages/Home\";\r\nimport { Search } from \"./componets/Search\";\r\n\r\n// import createHistory from \"history/createBrowserHistory\";\r\nimport { Details } from \"./pages/Details\";\r\n\r\n// export const history = createHistory();\r\nexport const contextProvider = React.createContext<any>(null);\r\nexport const ContextConsumer = contextProvider.Consumer;\r\n\r\nexport interface Movie {\r\n  popularity?: number;\r\n  vote_count?: number;\r\n  video?: boolean;\r\n  poster_path?: string;\r\n  id?: number;\r\n  adult?: boolean;\r\n  backdrop_path?: string;\r\n  original_language?: string;\r\n  original_title?: string;\r\n  genre_ids?: any;\r\n  title?: string;\r\n  vote_average?: number;\r\n  overview?: string;\r\n  release_date?: string;\r\n}\r\ntype TParams = { id: string };\r\n\r\nconst App: React.FC = () => {\r\n  const [movies, setMovies] = useState<Movie[]>([]);\r\n  const [details, setDetails] = useState<Movie>();\r\n  const [credit, setCredit] = useState();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [pages, setPages] = useState(1);\r\n  const [searched, setSearched] = useState<Movie[]>();\r\n  // const movieId = useRouteMatch<TParams>();\r\n  // console.log(movieId);\r\n  //infinite scroll implimentationl;\r\n  window.onscroll = function () {\r\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 5) {\r\n      setPages(pages + 1);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `http://api.themoviedb.org/3/search/movie?api_key=e76c5953047a45b321529afcee0a5460&query=${search} `\r\n      )\r\n      .then((res) => {\r\n        const results = res.data.results;\r\n        setSearched(results);\r\n        // console.log(\"found\", searched);\r\n      });\r\n    // console.log(\"sent\", search);\r\n  }, [search, searched]);\r\n  useEffect(() => {\r\n    // popular movie request\r\n    axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/movie/popular?api_key=e76c5953047a45b321529afcee0a5460&language=en-US&page=${pages}`\r\n      )\r\n      .then((res) => {\r\n        // console.log(res.data.results[0]);\r\n        const movieData = res.data.results;\r\n\r\n        setMovies((movies) => movies.concat(movieData));\r\n        // console.log(movies);\r\n      });\r\n    movieDetail(\" \");\r\n  }, [pages]);\r\n  // Function for geting movie details by id\r\n  const movieDetail = (id: string) => {\r\n    axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/movie/${id}?api_key=e76c5953047a45b321529afcee0a5460`\r\n      )\r\n      .then((res) => {\r\n        // console.log(details);\r\n        setDetails(res.data);\r\n      });\r\n    axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/movie/${id}/credits?api_key=e76c5953047a45b321529afcee0a5460`\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setCredit(res.data);\r\n      });\r\n    // return details;\r\n  };\r\n  const AppContext = {\r\n    movies,\r\n    details,\r\n    searched,\r\n    search,\r\n    movieDetail,\r\n    setSearch,\r\n    credit,\r\n  };\r\n  return (\r\n    <>\r\n      <contextProvider.Provider value={AppContext}>\r\n        <Router>\r\n          <Navigation />\r\n          <div className=\"app \">\r\n            {AppContext.searched === undefined || \"\" || null ? (\r\n              \"\"\r\n            ) : (\r\n              <div id=\"search\">\r\n                {AppContext.searched?.map((searched: Movie) => (\r\n                  <div key={searched.id} className=\"container \">\r\n                    <Search\r\n                      id={searched.id}\r\n                      poster_path={searched.poster_path}\r\n                      title={searched.title}\r\n                      release_date={searched.release_date}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            <Switch>\r\n              <Route exact path=\"/home\" component={Home} />\r\n              <Redirect exact from=\"/\" to=\"/home\" />\r\n              {details == null ? (\r\n                <Redirect to=\"/home\" />\r\n              ) : (\r\n                <Route\r\n                  exact\r\n                  path={`/movies/:${AppContext.details?.id}`}\r\n                  component={Details}\r\n                />\r\n              )}\r\n              <Route exact path={`/movie`} component={Details} />\r\n            </Switch>\r\n            {/* <Container>\r\n\t\t\t\t\t\t\t<div id=\"loadMore\" onClick={() => setPages(pages + 1)}>\r\n\t\t\t\t\t\t\t\t<p>Load more </p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Container> */}\r\n          </div>\r\n        </Router>\r\n        {/* <footer>staff</footer> */}\r\n      </contextProvider.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}